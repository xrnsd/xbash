#!/bin/bash
#存放命令封装
#存放xbash扩展封装
versionNum=v0.0.0.6

alias ..="effect=进入父目录;cd .."
alias ...="effect=进入爷目录;cd ../.."
alias xcc='effect=进入原目录;cd $OLDPWD'

if [[ -n $(which fdupes) ]];then
    alias xfr='effect=查找重复文件;fdupes -Sr'
fi

if [[ -n $(which fuser) ]];then
     alias xkf='effect=解除文件或目录占用;fuser -m -k -i'
fi

if [[ -n $(which todos) ]] && [[ -n $(which fromdos) ]];then
    alias unix2dos=todos
    alias dos2unix=fromdos
fi

if [[ -n $(which sensors) ]];then
    alias xcct="effect=查看cpu温度;ftMain -sc"
    alias xccct="effect=查看cpu各个核心温度;ftMain -scc"
fi

if [[ -n $(which tr) ]];then
    alias xX='effect=字符串转大写;_xX(){  echo "$1" | tr '[a-z]' '[A-Z]' ;};_xX $1'
    alias Xx='effect=字符串转小写;_Xx(){  echo "$1" | tr '[A-Z]' '[a-z]' ;};_Xx $1'
fi

if [[ -n $(which du) ]];then
    alias xdm='effect=查找最占用空间的20个目录;du -m --max-depth=2 | sort -nr | head -20 '
fi

if [[ -n $(which cat) ]];then
    alias xbh='effect=bash命令历史查询;ftBashHistory -p |grep'
    alias xbuildprop='effect=打印部分out下build.prop信息;[ -f "${ANDROID_PRODUCT_OUT}/system/build.prop" ] &&\
                      cat ${ANDROID_PRODUCT_OUT}/system/build.prop|grep "ro.product.model=" && \
                      cat ${ANDROID_PRODUCT_OUT}/system/build.prop|grep "ro.product.brand=" && \
                      cat ${ANDROID_PRODUCT_OUT}/system/build.prop|grep "ro.product.name=" && \
                      cat ${ANDROID_PRODUCT_OUT}/system/build.prop|grep "ro.product.device=" '
fi

if [ -d "$ANDROID_SDK" ];then
    alias xssd="effect=关闭设备;adb shell reboot"
    alias xsd="effect=关闭设备;adb shell reboot -p"
    alias xl='effect=过滤logcat;ftLogcatApplicationByTag'
    alias xpn='effect=使用adb快速push[仅push];ftAdbPush -n -f'
    alias xpa='effect=使用adb快速push[自动重启];ftAdbPush -a -f'
    alias xp='effect=使用adb快速push[询问是否重启];ftAdbPush -f '
    alias xle='effect=过滤错误的logcat;ftLogcatApplicationByTag -e'
    alias xlo='effect=过滤存在多个标签中一个的logcat;ftLogcatApplicationByTag -o'
    alias xlp="effect=根据包名过滤logcat;ftLogcatApplicationByTag -p"
    alias xlt='effect=过滤logcat,没有时间信息;ftLogcatApplicationByTag -t '
    alias xltp='effect=过滤logcat,没有时间信息;ftLogcatApplicationByTag -tp '
    alias xpml='effect=干掉设备对应包名的进程;ftMtkLog -p /home/enjoy/log'
    alias xk='effect=干掉设备对应包名的进程;ftKillApplicationByPackageName'
    alias xlce='effect=过滤错误的logcat;adb logcat -c;ftLogcatApplicationByTag -e'
    alias xpcn='effect=使用adb快速push[新终端中执行,仅push];ftAdbPush -c -n -f'
    alias xpca='effect=使用adb快速push[新终端中执行,自动重启];ftAdbPush -c -a -f'
    alias xpc='effect=使用adb快速push[新终端中执行,询问是否重启];ftAdbPush -c -f'
    alias xass='effect=共享android设备屏幕;ftAdbConnect -s'

    alias .9='effect=.9图片制作工具;${ANDROID_SDK}/tools/draw9patch'
    alias xgetevent='effect=打印输入设备事件节点清单; adb shell  -- getevent -p'
    alias xtp="effect=打印任务栈的栈顶信息;ftAdbConnect ;\
    [ -n ${autoTestDeviceId} ] && adb -s ${autoTestDeviceId} shell dumpsys activity top |grep ACTIVITY;\
    [ -z ${autoTestDeviceId} ] && adb shell dumpsys activity top |grep ACTIVITY"
    alias xpapk='effect=APK文件基本信息解析;${ANDROID_SDK}/build-tools/29.0.3/aapt d badging'
    alias xds='effect=手机截图;adb shell screencap -p /sdcard/sc.png&&adb pull /sdcard/sc.png ~/download/'
    alias xdv='effect=手机录屏;adb shell screenrecord /sdcard/sv.mp4&&adb pull /sdcard/sv.mp4 ~/download/'

    alias xqdialer='effect=启动拨号盘;adb shell am start -n com.android.dialer/.DialtactsActivity'
    alias xqselect='effect=启动隐藏;adb shell am start -n com.mtk.select/com.mtk.select.SelectActivity'
    alias xqsetting='effect=启动设置;adb shell am start -n com.android.settings/com.android.settings.Settings'
    alias xqengineermode='effect=启动工程模式; adb shell am start -n com.mediatek.engineermode/.EngineerMode'
    alias xqlauncher='effect=启动launcher;adb shell am start -n com.android.launcher3/com.android.launcher3.Launcher'
    alias xqcamera='effect=启动Camera2;adb shell am start -n com.android.camera2/com.android.camera.CameraActivity'
    alias xqmtklog='effect=启动MtkLog; adb shell am start -n com.mediatek.mtklogger/com.mediatek.mtklogger.MainActivity'
    alias xqfactorytest='effect=启动工厂测试;adb shell am start -n com.android.factorytest/com.android.factorytest.FTSamHomeActivity'

    [[ -f $rFilePathXbashDBBase ]] && packageNameList="$(ftIniGetValue $rFilePathXbashDBBase androidDevicePackages packageNameList)"
    complete -W "${packageNameList[@]} launcher systemui" xlp
    complete -W "${packageNameList[@]} launcher systemui 123456" xl
    complete -W "${packageNameList[@]} launcher systemui 123456" xlt
    complete -W "${packageNameList[@]} launcher systemui monkey" xk
fi

alias xb='effect=xbash主入口[旧];ftMain'


alias xbp='effect=系统维护;ftMaintainSystem'
alias xr='effect=更新xbash配置;ftResetXbash'
alias xd='effect=MTK下载工具;ftMtkFlashTool'
alias xdf='effect=普通磁盘空间;df -lh |grep -E "文件系统|/dev/" |grep -v "/snap"'
alias xdw='effect=MTK下载工具;ftMtkFlashTool -w'
alias xcg='effect=清空回收站;ftCleanGarbage -e -t'
alias xfind='effect=查找含特定字符串的文件;ftFind -s '
alias xhf='effect=xbash扩展说明查找;ftMain -h |grep -i '
alias xhfa='effect=xbash扩展说明查找;ftMain -ha |grep -i '
alias xcb='effect=进入xbash目录;cd $dirPathHomeXbash'
alias xca='effect=快速切换到Aosp功能目录;ftCdAospDirectory '
alias xFindOuts='effect=显示所有out备份;ftAutoFindAospBuildOuts'
alias xcd='effect=快速切换到不同Aosp项目;ftAutoCdAospProject -n'
alias xcf='effect=进入xconfig目录;cd ${rDirPathUserHome}/xconfig'
alias xss='effect=无密码重启[默认10s];ftPowerManagement reboot'
alias xs='effect=无密码关机[默认10s];ftPowerManagement shutdown'
alias xrbcompare='effect=重新试用bcompare;rm -rf ~/.config/bcompare'
alias xcaf='effect=用文件管理器打开Aosp功能目录;ftCdAospDirectory -fm '
alias xcdf='effect=用文件管理器切换到不同Aosp项目;ftAutoCdAospProject -fm '
alias xcdu='effect=快速更新Aosp项目列表配置;ftAutoCdAospProject -u > /dev/null '
alias xep='effect=打开Eclipse;nohup ${rDirPathTools}/eclipse/eclipse & >/dev/null;exit'
alias xs2av='effect=android版本查询;ftIniGetValue $rFilePathXbashDBBase androidSDK2Verison'
alias xfkc='effect=查找kernel的config说明;_xfkc(){  grep -nr "${1}" --include=Kconfig -C 5 kernel-* ;};_xfkc $1'
alias xrbp='effect=删除out下面build.prop;rm -rf ${ANDROID_PRODUCT_OUT}/obj/ETC/system_build_prop_intermediates \
         ${ANDROID_PRODUCT_OUT}/system/build.prop'
alias xas='effect=打开Android_studio;nohup ${rDirPathTools}/android-studio/bin/studio.sh & >/dev/null;rm nohup.out;exit'
alias xqmtklogview='effect=MTKlog分析工具;nohup /home/enjoy/tools/gat-linux-x86_64-3/modules/MediatekLogView/MediatekLogView \
         & >/dev/null;rm nohup.out;exit'

if [ -f /usr/bin/gnome-session-quit ] ;then
     alias xsss='effect=注销系统;ftPowerManagement logout'
fi

if [[ -n $(which git) ]];then
    alias xgdt='effect=删除git的TAG;ftGitTag -d '
    alias xgat='effect=添加git的版本说明标签;ftGitTag -a '
    alias xgp='effect=获取父分支[自动获取分支名];ftGitgetParentBranch'
    alias xgpp='effect=获取父分支[指定分支名];ftGitgetParentBranch -b '
    alias xgft='effect=git的TAG标签内容过滤;ftGitTagGrep -f '
    alias xgbt='effect=添加git的分支说明标签;ftGitTag --branch '
    alias xgmt='effect=添加git的修改说明标签;ftGitTag --modify '
    alias xgla='effect=查看本地所有分支历史;ftGitLogShell -a $2'
    alias xglb='effect=查看仓库分支树;ftGitLogShell -b'
    alias xgrs="effect=回滚最新的commit;git reset --soft HEAD^"
    alias xgrsc="effect=修改最新的commit的标签;git reset --soft HEAD^ ; git commit -m "
    alias xgl='effect=格式化显示20或xxx条git_log;ftGitLogShell -n 20'
    alias xgatt='effect=添加git的版本说明标签,使用模板;ftGitTag --app '
    alias xglh='effect=显示xx条commit的hash值;ftGitLogShell -c "%h" -n '
    alias xgb="effect=过滤git仓库本地分支;ftGitCheckoutBranch -a -t"
    alias xgbrancha="effect=过滤git仓库所有分支;ftGitCheckoutBranch -a -t"
    alias xglf='effect=格式化显示修改内容包含指定字符git_log;ftGitLogShell -fs'
fi

if [[ -n ftCdAospDirectory ]];then
    alias xcddialer='effect=快速进入dialer;ftCdAospDirectory app dialer'
    alias xcdsettings='effect=快速进入settings;ftCdAospDirectory app settings'
    alias xcdlauncher='effect=快速进入launcher;ftCdAospDirectory app launcher'
    alias xcdfactorytest='effect=快速进入factorytest;ftCdAospDirectory app factorytest'
    alias xcdsystemui='effect=快速进入systemui;ftCdAospDirectory frameworks base packages systemui'
    alias xcdsettingsprovider='effect=快速进入settingsprovider;ftCdAospDirectory frameworks base packages settingsprovider'
fi

if [[ -n $(which subl) ]];then
    alias xpwd='effect=使用sublime_text打开本目录;subl $(pwd)'
    alias xsubl='effect=使用sublime_text打开xbash和xconfig ; subl $rDirPathXbash ${rDirPathUserHome}/xconfig'
fi

if [[ -n $(which keytool) ]];then
    alias xkey='effect=查看秘钥文件的信息;keytool -exportcert -list -v -keystore '
fi

if [[ -n $(which apt-fast) ]];then
    alias apt-get='apt-fast'
fi

if [[ -n $(which netstat) ]];then
    alias xcddialer='effect=查找制定端口;sudo netstat -ap |grep '
fi

if [[ -d "/opt/cisco/anyconnect" ]];then
    alias xvpn='ftVpnControl'
fi

#命令选项快速适配
complete -F _ftMainVal xb
complete -W " -a --adb -j -h -s" xr
complete -F _cdAospDirectory xca
complete -F _cdAospDirectory xcaf
complete -W "--backup --restore --sd_finish -b -r -s" xbp