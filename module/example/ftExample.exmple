complete -W "-h --help --rely_install" ftExample
ftExample()
{
    local ftEffect=函数模板
    local isEnable=false #设为 true 时启用实现 , 设为 def 时将不在说明中显示
    #Debug用
    # trap 'printf "变量跟踪\e[33m %-7s \e[0m \e[31m %-30s \e[0m  \n" [$LINENO]: example1=$example1' DEBUG
    # trap 'printf "变量跟踪\e[33m %-7s \e[0m \e[31m %-30s \e[0m  \n" [$LINENO]: example1=$example1' ERR

    #可用性校验
    [[ "$isEnable" != "true" ]] && ftEcho -s "${ftEffect} 已被禁用，请确认" && return
    #解参验耦
    local example1
    local valCount=1 errorContent arg arg2 # arg3 # arg4
    for ((i=1;i<=$#;i++)) ; do eval arg=\${${i}} ; eval arg2=\${$((i+1))}
    #eval arg3=\${$((i+2))} #; eval arg4=\${$((i+3))}
    case "${arg}" in
        # 说明参数解析部分 ==============
        --rely) ftEcho -rc "${ftEffect}" "的依赖说明" "\
#=========================================================
#    ${ftEffect}依赖包 $2
#    请尝试使用 ftExample --rely_install 补全依赖
#========================================================="; return ;;
        --rely_install)
            ftEcho -s "开始补全依赖"
            sudo apt-get install xxxx
            return ;;
        -h | --help) ftEcho -rc "${ftEffect}" "的使用示例" "\
#=========================================================
#    以下[参数对]无先后顺序可任意组合
#
#    ftExample xxxx
#========================================================="; return ;;
        --env) ftEcho -rc "${ftEffect}" "的使用环境说明" "\
#=========================================================
#    环境未初始化
#    使用前,请先初始化[xxxxxxxxx]
#========================================================="; return ;;

        # 变量参数解析部分 ==============
        -x ) example1="${arg2}" #"${arg2:-"exampleDef1"}" #"${arg3:-"exampleDef2"}" #"${arg4:-"exampleDef4"}"
            ;;
    * ) [[ -z "${arg}" ]] && break ;; esac;done

    #依赖校验
    [[ -z $(which exampleTools1) ]] && ftExample --rely "exampleTools1" && return $resultFail
    #环境校验
    [ -z "${exampleTools2}" ] && ftExample --env && return $resultFail
    #参数校验
    (( $#!=$valCount )) && errorContent="${errorContent}\\n参数默认有${valCount}个,当前为$#个" 
    [ -z "${example1}" ] && errorContent="${errorContent}\\n[示例1]example1=$example1"
    [ -n "$errorContent" ] && ftEcho -ea "函数[${ftEffect}]的参数错误${errorContent}\\n请查看下面说明:" && ftExample -h && return $resultFail

    #实现主体
}